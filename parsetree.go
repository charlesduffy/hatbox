package main
//import "fmt"

//Parse tree node types enumeration
//TODO: figure out a way to encapsualte this in 
//a more idiomatic fashion

type nodetype int
type datumtype int

// Node types are autogenerated from gram.y in Makefile

// Parse tree "wrapper" struct
type ptree struct {
	tree	[]Pnode
	query	string
}

// Parse tree node
type Pnode struct {
	tag	nodetype
	tree	[]Pnode
	val	Expr
}

// Expression tree
type Expr struct {
	data	datum
	left	*Expr
	right	*Expr
}

// Datum interface
// Need to add some methods here 
// but leave it blank for the time being

type datum struct {
	value	datumval
	dtype	datumtype
}

func (p *Pnode) append_node(n Pnode) {
	p.tree = append(p.tree, n)
}

